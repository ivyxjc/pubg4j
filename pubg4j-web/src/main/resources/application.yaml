spring:
    datasource:
        druid:
            url: ${jdbc.url}
            username: ${jdbc.username}
            password: ${jdbc.password}
            initial-size: 20
            max-active: 130
            min-idle: 5
            max-wait: 10000
            pool-prepared-statements: true
            max-pool-prepared-statement-per-connection-size: 130
            max-open-prepared-statements: 130
            validation-query: SELECT 1 FROM DUAL
            validation-query-timeout: 1000
            test-on-borrow: false
            test-on-return: false
            test-while-idle: true
            time-between-eviction-runs-millis: 60000
            min-evictable-idle-time-millis: 300000
            filter:
                stat:
                    merge-sql: true
                    slow-sql-millis: 800
    kafka:
        bootstrap-servers: ${kafka.server}
        producer:
            retries: 1
            batch-size: 16384
            buffer-memory: 33554432
            # 指定消息key和消息体的编解码方式
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.apache.kafka.common.serialization.StringSerializer
        properties:
            # 加密方式
            security.protocol: ${kafka.security.protocol}
            sasl.mechanism: ${kafka.sasl.mechanism}
        consumer:
            auto-offset-reset: earliest
            enable-auto-commit: true
            # 消费者 group
            group-id: pubg
            # 指定消息key和消息体的编解码方式
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

mybatis:
    type-aliases-package: xyz.ivyxjc.pubg4j.web
    mapper-locations: classpath:mybatis/*.xml


